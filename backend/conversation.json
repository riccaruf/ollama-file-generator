[
  {
    "prompt": "Genera uno script Python completo, Specifica il nome e il contenuto di ogni file nel formato: // File: percorso/nomefile.ext seguito dal contenuto. Includi anche test. Lo script deve provvedere ad effettuare lo scrape di una pagina di amazon.it estraendone le opinioni degli utenti e le stelline partendo dall'url del prodotto.",
    "response": "import requests\nfrom bs4 import BeautifulSoup\n\ndef scrape_amazon_opinioni(url):\n    \"\"\"\n    Scrape le opinioni e le stelline da una pagina di prodotto Amazon.it.\n\n    Args:\n        url: L'URL della pagina del prodotto Amazon.it.\n\n    Returns:\n        Un dizionario contenente il numero di stelle e il numero di recensioni\n        o None in caso di errore.\n    \"\"\"\n    try:\n        response = requests.get(url)\n        response.raise_for_status()  # Solleva un'eccezione per errori HTTP\n        soup = BeautifulSoup(response.content, 'html.parser')\n\n        # Trova gli elementi contenenti le stelle e il numero di recensioni\n        star_element = soup.find('span', {'data-a-mock': 'review-rating'})\n        review_count_element = soup.find('span', {'data-a-mock': 'review-count'})\n\n        if star_element and review_count_element:\n            star_value = int(star_element.text.replace('.', ''))  # Estrai il valore delle stelle\n            review_count = int(review_count_element.text.replace('(', '').replace(')', '').replace(',', ''))\n            return {\"stars\": star_value, \"reviews\": review_count}\n        else:\n            print(f\"Elementi non trovati sulla pagina: {url}\")\n            return None\n    except requests.exceptions.RequestException as e:\n        print(f\"Errore durante la richiesta HTTP: {e}\")\n        return None\n    except Exception as e:\n        print(f\"Errore imprevisto: {e}\")\n        return None\n\n\n# Esempio di utilizzo:\nif __name__ == \"__main__\":\n    # Sostituisci con l'URL del prodotto Amazon.it che vuoi scrapeare\n    url_prodotto = \"https://www.amazon.it/gp/bestsellers/electronics/ref=sr_1_1_tab_mobile\" # Esempio: prodotto di elettronica\n\n    risultati = scrape_amazon_opinioni(url_prodotto)\n\n    if risultati:\n        print(f\"Dati estratti da {url_prodotto}:\")\n        print(f\"  Stelle: {risultati['stars']}\")\n        print(f\"  Recensioni: {risultati['reviews']}\")\n    else:\n        print(f\"Impossibile estrarre le opinioni da {url_prodotto}\")\n\n    # File output (opzionale)\n    with open(\"output.txt\", \"w\") as f:\n        f.write(\"// File: output.txt\\n\")\n        f.write(\"Dati estratti da amazon.it:\\n\")\n        if risultati:\n            f.write(f\"  Stelle: {risultati['stars']}\\n\")\n            f.write(f\"  Recensioni: {risultati['reviews']}\\n\")\n        else:\n            f.write(\"Impossibile estrarre le opinioni.\\n\")\n\n    print(\"\\nFile 'output.txt' creato con i risultati.\")\n\npip install requests beautifulsoup4\n\npython nome_script.py"
  }
]